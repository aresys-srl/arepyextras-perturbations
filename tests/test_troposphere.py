# SPDX-FileCopyrightText: Aresys S.r.l. <info@aresys.it>
# SPDX-License-Identifier: MIT

"""Unittest for atmospheric/troposphere.py core functionalities"""

import unittest
from pathlib import Path
from tempfile import TemporaryDirectory

import numpy as np
from arepytools.timing.precisedatetime import PreciseDateTime

from arepyextras.perturbations.atmospheric import troposphere as tropo

REF_MAP = """
! Version:            1.0
! Source:             D. Landskron, TU Vienna (created: 2019-04-17)
! Data_types:         VMF3 (lat lon ah aw zhd zwd)
! Epoch:              2019 01 08 00 00  0.0
! Scale_factor:       1.e+00
! Range/resolution:   -89.5 89.5 0.5 359.5 1 1
! Comment:            vmf.geo.tuwien.ac.at/trop_products/GRID/1x1/VMF3/VMF3_EI/2019/
-40    0.5  0.00115560  0.00059656  2.3201  0.0134
-40    10  0.00115559  0.00059649  2.3201  0.0134
-40    25  0.00115559  0.00059625  2.3201  0.0134
-40    35  0.00115558  0.00059571  2.3200  0.0135
-40    45  0.00115558  0.00059519  2.3200  0.0135
-40    55  0.00115558  0.00059423  2.3200  0.0135
-40    65  0.00115556  0.00059308  2.3200  0.0135
-40    75  0.00115555  0.00059214  2.3200  0.0135
-40    85  0.00115555  0.00059121  2.3200  0.0135
-40    95  0.00115556  0.00059026  2.3200  0.0135
-40   105  0.00115554  0.00058967  2.3200  0.0135
-40   115  0.00115553  0.00058949  2.3199  0.0135
-40   125  0.00115553  0.00059031  2.3199  0.0135
-40   135  0.00115553  0.00059234  2.3199  0.0136
-40   145  0.00115553  0.00059440  2.3199  0.0136
-40   155  0.00115551  0.00059601  2.3199  0.0136
-40   165  0.00115550  0.00059750  2.3199  0.0136
-40   175  0.00115549  0.00059877  2.3199  0.0136
-40   185  0.00115548  0.00059982  2.3199  0.0136
-40   195  0.00115547  0.00060117  2.3198  0.0136
-40   205  0.00115545  0.00060225  2.3198  0.0137
-40   215  0.00115545  0.00060308  2.3198  0.0137
-40   225  0.00115545  0.00060404  2.3198  0.0137
-40   235  0.00115545  0.00060494  2.3198  0.0137
-40   245  0.00115543  0.00060587  2.3198  0.0137
-40   255  0.00115542  0.00060686  2.3198  0.0137
-40   265  0.00115540  0.00060793  2.3197  0.0138
-40   275  0.00115540  0.00061033  2.3197  0.0138
-40   285  0.00115540  0.00061411  2.3197  0.0138
-40   295  0.00115539  0.00061806  2.3197  0.0138
-40   305  0.00115537  0.00062166  2.3197  0.0138
-40   315  0.00115535  0.00062472  2.3197  0.0139
-40   325  0.00115535  0.00062749  2.3197  0.0139
-40   335  0.00115534  0.00063011  2.3197  0.0139
-40   345  0.00115532  0.00063297  2.3197  0.0139
-40   355  0.00115531  0.00063574  2.3196  0.0140
-30 0.5  0.00115560 0.00047356 2.3251 0.0101
-30 15  0.00115561 0.00048356 2.325 0.0103
-30 25  0.00115562 0.00049356 2.3249 0.0105
-30 35  0.00115563 0.00050356 2.3248 0.0107
-30 45  0.00115564 0.00051356 2.3247 0.0109
-30 55  0.00115565 0.00052356 2.3246 0.0111
-30 65  0.00115566 0.00053356 2.3245 0.0113
-30 75  0.00115567 0.00054356 2.3244 0.0115
-30 85  0.00115568 0.00055356 2.3243 0.0117
-30 95  0.00115569 0.00056356 2.3242 0.0119
-30 105  0.00115570 0.00057356 2.3241 0.0121
-30 115  0.00115571 0.00058356 2.324 0.0123
-30 125  0.00115572 0.00059356 2.3239 0.0125
-30 135  0.00115573 0.00060356 2.3238 0.0127
-30 145  0.00115574 0.00061356 2.3237 0.0129
-30 155  0.00115575 0.00062356 2.3236 0.0131
-30 165  0.00115576 0.00063356 2.3235 0.0133
-30 175  0.00115577 0.00064356 2.3234 0.0135
-30 185  0.00115578 0.00065356 2.3233 0.0137
-30 195  0.00115579 0.00066356 2.3232 0.0139
-30 205  0.00115580 0.00067356 2.3231 0.0141
-30 215  0.00115581 0.00068356 2.323 0.0143
-30 225  0.00115582 0.00069356 2.3229 0.0145
-30 235  0.00115583 0.00070356 2.3228 0.0147
-30 245  0.00115584 0.00071356 2.3227 0.0149
-30 255  0.00115585 0.00072356 2.3226 0.0151
-30 265  0.00115586 0.00073356 2.3225 0.0153
-30 275  0.00115587 0.00074356 2.3224 0.0155
-30 285  0.00115588 0.00075356 2.3223 0.0157
-30 295  0.00115589 0.00076356 2.3222 0.0159
-30 305  0.00115590 0.00077356 2.3221 0.0161
-30 315  0.00115591 0.00078356 2.322 0.0163
-30 325  0.00115592 0.00079356 2.3219 0.0165
-30 335  0.00115593 0.00080356 2.3218 0.0167
-30 345  0.00115594 0.00081356 2.3217 0.0169
-30 355  0.00115595 0.00082356 2.3216 0.0171
-20  0.5  0.00127602  0.00051134  2.3106  0.195
-20  15  0.0012762  0.00050888  2.3107  0.1948
-20  25  0.00127638  0.00050642  2.3108  0.1946
-20  35  0.00127656  0.00050396  2.3109  0.1944
-20  45  0.00127674  0.0005015  2.311  0.1942
-20  55  0.00127692  0.00049904  2.3111  0.194
-20  65  0.0012771  0.00049658  2.3112  0.1938
-20  75  0.00127728  0.00049412  2.3113  0.1936
-20  85  0.00127746  0.00049166  2.3114  0.1934
-20  95  0.00127764  0.0004892  2.3115  0.1932
-20  105  0.00127782  0.00048674  2.3116  0.193
-20  115  0.001278  0.00048428  2.3117  0.1928
-20  125  0.00127818  0.00048182  2.3118  0.1926
-20  135  0.00127836  0.00047936  2.3119  0.1924
-20  145  0.00127854  0.0004769  2.312  0.1922
-20  155  0.00127872  0.00047444  2.3121  0.192
-20  165  0.0012789  0.00047198  2.3122  0.1918
-20  175  0.00127908  0.00046952  2.3123  0.1916
-20  185  0.00127926  0.00046706  2.3124  0.1914
-20  195  0.00127944  0.0004646  2.3125  0.1912
-20  205  0.00127962  0.00046214  2.3126  0.191
-20  215  0.0012798  0.00045968  2.3127  0.1908
-20  225  0.00127998  0.00045722  2.3128  0.1906
-20  235  0.00128016  0.00045476  2.3129  0.1904
-20  245  0.00128034  0.0004523  2.313  0.1902
-20  255  0.00128052  0.00044984  2.3131  0.19
-20  265  0.0012807  0.00044738  2.3132  0.1898
-20  275  0.00128088  0.00044492  2.3133  0.1896
-20  285  0.00128106  0.00044246  2.3134  0.1894
-20  295  0.00128124  0.00044  2.3135  0.1892
-20  305  0.00128142  0.00043754  2.3136  0.189
-20  315  0.0012816  0.00043508  2.3137  0.1888
-20  325  0.00128178  0.00043262  2.3138  0.1886
-20  335  0.00128196  0.00043016  2.3139  0.1884
-20  345  0.00128214  0.0004277  2.314  0.1882
-20  355  0.00128232  0.00042524  2.3141  0.188
-10  0.5  0.00127764  0.00065495  2.3143  0.273
-10  15  0.0012766  0.00065755  2.3142  0.2749
-10  25  0.00127556  0.00066015  2.3141  0.2768
-10  35  0.00127452  0.00066275  2.314  0.2787
-10  45  0.00127348  0.00066535  2.3139  0.2806
-10  55  0.00127244  0.00066795  2.3138  0.2825
-10  65  0.0012714  0.00067055  2.3137  0.2844
-10  75  0.00127036  0.00067315  2.3136  0.2863
-10  85  0.00126932  0.00067575  2.3135  0.2882
-10  95  0.00126828  0.00067835  2.3134  0.2901
-10  105  0.00126724  0.00068095  2.3133  0.292
-10  115  0.0012662  0.00068355  2.3132  0.2939
-10  125  0.00126516  0.00068615  2.3131  0.2958
-10  135  0.00126412  0.00068875  2.313  0.2977
-10  145  0.00126308  0.00069135  2.3129  0.2996
-10  155  0.00126204  0.00069395  2.3128  0.3015
-10  165  0.001261  0.00069655  2.3127  0.3034
-10  175  0.00125996  0.00069915  2.3126  0.3053
-10  185  0.00125892  0.00070175  2.3125  0.3072
-10  195  0.00125788  0.00070435  2.3124  0.3091
-10  205  0.00125684  0.00070695  2.3123  0.311
-10  215  0.0012558  0.00070955  2.3122  0.3129
-10  225  0.00125476  0.00071215  2.3121  0.3148
-10  235  0.00125372  0.00071475  2.312  0.3167
-10  245  0.00125268  0.00071735  2.3119  0.3186
-10  255  0.00125164  0.00071995  2.3118  0.3205
-10  265  0.0012506  0.00072255  2.3117  0.3224
-10  275  0.00124956  0.00072515  2.3116  0.3243
-10  285  0.00124852  0.00072775  2.3115  0.3262
-10  295  0.00124748  0.00073035  2.3114  0.3281
-10  305  0.00124644  0.00073295  2.3113  0.33
-10  315  0.0012454  0.00073555  2.3112  0.3319
-10  325  0.00124436  0.00073815  2.3111  0.3338
-10  335  0.00124332  0.00074075  2.311  0.3357
-10  345  0.00124228  0.00074335  2.3109  0.3376
-10  355  0.00124124  0.00074595  2.3108  0.3395
"""
REF_DATE = PreciseDateTime.from_utc_string("08-JAN-2019 08:32:54.152948000000")


class TroposphereTest(unittest.TestCase):
    """Testing atmospheric/troposphere.py functionalities"""

    def setUp(self) -> None:
        # creating test data
        self.tolerance = 1e-9
        self.heights = np.array([350, 370, 400])
        self.sat_pos = np.array(
            [
                [-5213148.288925, 3477273.33615244, -3295222.96763126],
                [-5209063.04576642, 3470355.46273472, -3308970.22887301],
                [-5204333.07709188, 3462384.33554006, -3324751.41275261],
                [-5197791.26572232, 3451426.28423579, -3346343.6922817],
                [-5193770.37483127, 3444728.34929901, -3359483.76228291],
                [-5197116.11248636, 3450299.65927584, -3348556.97423551],
                [-5202031.87656563, 3458520.94424205, -3332377.50336732],
                [-5204651.7435651, 3462920.08385765, -3323692.71608399],
                [-5209902.10503636, 3471773.77145256, -3306155.65055151],
                [-5215141.37420304, 3480659.77578179, -3288475.91262992],
            ]
        )
        self.target_coords = np.array(
            [
                [-4989394.044, 2746844.389, -2862070.09],
                [-4987723.092, 2737761.662, -2873635.587],
                [-4982121.114, 2732288.807, -2888334.621],
                [-4973496.308, 2726074.177, -2908844.803],
                [-4963032.78, 2729484.882, -2923421.927],
                [-4961686.017, 2740588.588, -2915329.591],
                [-4964674.991, 2750065.423, -2901345.385],
                [-4973836.181, 2744662.788, -2890816.802],
                [-4983429.822, 2746023.792, -2873110.56],
                [-4979009.54, 2766786.057, -2860862.575],
            ]
        )
        # expected results
        self.expected_pressures = np.array([971.9050648193999, 969.5844204163641, 966.1118682857716])
        self.expected_hydrostatic_delay = np.array(
            [
                2.9882058431993097,
                2.9908421004939822,
                2.998750057400453,
                2.990975258357727,
                2.954632852017021,
                2.9385643194023126,
                2.9360080850863493,
                2.967138189420608,
                2.980570829089005,
                2.9429277290885945,
            ]
        )
        self.expected_wet_delay = np.array(
            [
                0.0911915490935349,
                0.08787081212720335,
                0.08593137954880743,
                0.08113296356207467,
                0.07605115036306065,
                0.07777851655757585,
                0.0813679147280945,
                0.08498900485525301,
                0.08889180308752691,
                0.09084798325307979,
            ]
        )

    def test_troposphere_barometric_formula(self) -> None:
        """Testing _troposphere_barometric_formula function"""
        pressure = tropo._troposphere_barometric_formula(height=self.heights)
        np.testing.assert_allclose(pressure, self.expected_pressures, atol=self.tolerance, rtol=0)

    def test_compute_tropospheric_delay(self) -> None:
        """Testing compute_delay function"""
        with TemporaryDirectory() as tmpdir:
            files = [
                Path(tmpdir).joinpath(p)
                for p in ["VMF3_20190108.H00", "VMF3_20190108.H06", "VMF3_20190108.H12", "VMF3_20190108.H18"]
            ]
            for file in files:
                file.write_text(REF_MAP, encoding="UTF-8")
            hydrostatic_delay, wet_delay = tropo.compute_delay(
                acq_time=REF_DATE, sat_xyz_coords=self.sat_pos, targets_xyz_coords=self.target_coords, map_folder=tmpdir
            )
            np.testing.assert_allclose(hydrostatic_delay, self.expected_hydrostatic_delay, atol=self.tolerance, rtol=0)
            np.testing.assert_allclose(wet_delay, self.expected_wet_delay, atol=self.tolerance, rtol=0)


if __name__ == "__main__":
    unittest.main()
